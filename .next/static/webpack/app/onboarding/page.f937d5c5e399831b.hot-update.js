"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/onboarding/page",{

/***/ "(app-pages-browser)/./stores/useAppStore.ts":
/*!*******************************!*\
  !*** ./stores/useAppStore.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAppLoading: function() { return /* binding */ useAppLoading; },\n/* harmony export */   useAppStore: function() { return /* binding */ useAppStore; },\n/* harmony export */   useHasCompletedOnboarding: function() { return /* binding */ useHasCompletedOnboarding; },\n/* harmony export */   useHydratedStore: function() { return /* binding */ useHydratedStore; },\n/* harmony export */   useOnboardingActions: function() { return /* binding */ useOnboardingActions; },\n/* harmony export */   useOnboardingState: function() { return /* binding */ useOnboardingState; },\n/* harmony export */   useOnboardingStep: function() { return /* binding */ useOnboardingStep; },\n/* harmony export */   useUserData: function() { return /* binding */ useUserData; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\nconst useAppStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_2__.persist)((set, get)=>({\n        // Initial state\n        hasCompletedOnboarding: false,\n        isOnboardingInProgress: false,\n        currentOnboardingStep: 1,\n        userPreferences: null,\n        bookRatings: [],\n        authorRatings: [],\n        userBooks: [],\n        isLoading: false,\n        // Basic setters\n        setOnboardingCompleted: (completed)=>set({\n                hasCompletedOnboarding: completed\n            }),\n        setOnboardingStep: (step)=>set({\n                currentOnboardingStep: step\n            }),\n        setOnboardingInProgress: (inProgress)=>set({\n                isOnboardingInProgress: inProgress\n            }),\n        setUserPreferences: (preferences)=>set({\n                userPreferences: preferences\n            }),\n        setBookRatings: (ratings)=>set({\n                bookRatings: ratings\n            }),\n        setAuthorRatings: (ratings)=>set({\n                authorRatings: ratings\n            }),\n        // User books actions\n        setUserBooks: (books)=>set({\n                userBooks: books\n            }),\n        addUserBook: (book)=>set((state)=>({\n                    userBooks: [\n                        ...state.userBooks,\n                        book\n                    ]\n                })),\n        updateUserBook: (bookId, updates)=>set((state)=>({\n                    userBooks: state.userBooks.map((book)=>book.id === bookId ? {\n                            ...book,\n                            ...updates\n                        } : book)\n                })),\n        removeUserBook: (bookId)=>set((state)=>({\n                    userBooks: state.userBooks.filter((book)=>book.id !== bookId)\n                })),\n        clearOldDiscoverBooks: ()=>set((state)=>({\n                    userBooks: state.userBooks.filter((book)=>!book.id.startsWith(\"discover-\"))\n                })),\n        isBookInLibrary: (bookId)=>{\n            const state = get();\n            return state.userBooks.some((book)=>book.id === bookId);\n        },\n        getBookFromLibrary: (bookId)=>{\n            const state = get();\n            return state.userBooks.find((book)=>book.id === bookId);\n        },\n        likeBook: (bookId, bookData)=>set((state)=>{\n                const existingBook = state.userBooks.find((book)=>book.id === bookId);\n                if (existingBook) {\n                    // Update existing book\n                    return {\n                        userBooks: state.userBooks.map((book)=>book.id === bookId ? {\n                                ...book,\n                                isLiked: true\n                            } : book)\n                    };\n                } else {\n                    // Add new book as liked\n                    const newBook = {\n                        id: bookId,\n                        title: bookData.title || \"Unknown Title\",\n                        author: bookData.author || \"Unknown Author\",\n                        cover: bookData.cover || \"/placeholder-book.jpg\",\n                        description: bookData.description || \"\",\n                        rating: bookData.rating || 0,\n                        status: \"want-to-read\",\n                        dateAdded: new Date().toISOString().split(\"T\")[0],\n                        genre: bookData.genre || [],\n                        mood: bookData.mood || [],\n                        isbn: bookData.isbn || \"\",\n                        pages: bookData.pages || 0,\n                        publishedYear: bookData.publishedYear || new Date().getFullYear(),\n                        isLiked: true,\n                        ...bookData\n                    };\n                    return {\n                        userBooks: [\n                            ...state.userBooks,\n                            newBook\n                        ]\n                    };\n                }\n            }),\n        unlikeBook: (bookId)=>set((state)=>({\n                    userBooks: state.userBooks.map((book)=>book.id === bookId ? {\n                            ...book,\n                            isLiked: false\n                        } : book)\n                })),\n        rateBook: (bookId, rating, bookData)=>set((state)=>{\n                const existingBook = state.userBooks.find((book)=>book.id === bookId);\n                if (existingBook) {\n                    // Update existing book\n                    return {\n                        userBooks: state.userBooks.map((book)=>book.id === bookId ? {\n                                ...book,\n                                userRating: rating\n                            } : book)\n                    };\n                } else if (bookData) {\n                    // Add new book with rating\n                    const newBook = {\n                        id: bookId,\n                        title: bookData.title || \"Unknown Title\",\n                        author: bookData.author || \"Unknown Author\",\n                        cover: bookData.cover || \"/placeholder-book.jpg\",\n                        description: bookData.description || \"\",\n                        rating: bookData.rating || 0,\n                        status: \"want-to-read\",\n                        dateAdded: new Date().toISOString().split(\"T\")[0],\n                        genre: bookData.genre || [],\n                        mood: bookData.mood || [],\n                        isbn: bookData.isbn || \"\",\n                        pages: bookData.pages || 0,\n                        publishedYear: bookData.publishedYear || new Date().getFullYear(),\n                        userRating: rating,\n                        ...bookData\n                    };\n                    return {\n                        userBooks: [\n                            ...state.userBooks,\n                            newBook\n                        ]\n                    };\n                }\n                return state;\n            }),\n        setLoading: (loading)=>set({\n                isLoading: loading\n            }),\n        // Complex actions\n        completeOnboarding: (preferences, bookRatings, authorRatings)=>set({\n                hasCompletedOnboarding: true,\n                isOnboardingInProgress: false,\n                userPreferences: preferences,\n                bookRatings,\n                authorRatings,\n                currentOnboardingStep: 1\n            }),\n        resetOnboarding: ()=>set({\n                hasCompletedOnboarding: false,\n                isOnboardingInProgress: false,\n                currentOnboardingStep: 1,\n                userPreferences: null,\n                bookRatings: [],\n                authorRatings: []\n            }),\n        // Computed getters\n        getRecommendationData: ()=>{\n            const state = get();\n            return {\n                preferences: state.userPreferences,\n                bookRatings: state.bookRatings,\n                authorRatings: state.authorRatings\n            };\n        }\n    }), {\n    name: \"bookhaven-app-store\",\n    storage: (0,zustand_middleware__WEBPACK_IMPORTED_MODULE_2__.createJSONStorage)(()=>localStorage),\n    // Only persist certain parts of the state\n    partialize: (state)=>({\n            hasCompletedOnboarding: state.hasCompletedOnboarding,\n            userPreferences: state.userPreferences,\n            bookRatings: state.bookRatings,\n            authorRatings: state.authorRatings,\n            userBooks: state.userBooks\n        }),\n    // Add some safeguards to prevent hydration issues\n    skipHydration: false\n}));\n// Hydration-safe hook to prevent SSR mismatches\nconst useHydratedStore = ()=>{\n    const [hasHydrated, setHasHydrated] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Wait for Zustand to hydrate\n        const unsubscribe = useAppStore.persist.onFinishHydration(()=>{\n            setHasHydrated(true);\n        });\n        // If already hydrated\n        if (useAppStore.persist.hasHydrated()) {\n            setHasHydrated(true);\n        }\n        return unsubscribe;\n    }, []);\n    return hasHydrated;\n};\n// Individual selectors for better performance\nconst useHasCompletedOnboarding = ()=>useAppStore((state)=>state.hasCompletedOnboarding);\nconst useOnboardingStep = ()=>useAppStore((state)=>state.currentOnboardingStep);\nconst useOnboardingActions = ()=>useAppStore((state)=>({\n            setStep: state.setOnboardingStep,\n            complete: state.completeOnboarding,\n            reset: state.resetOnboarding\n        }));\n// For backward compatibility, keep the combined hook but make it more stable\nconst useOnboardingState = ()=>{\n    const hasCompleted = useAppStore((state)=>state.hasCompletedOnboarding);\n    const isInProgress = useAppStore((state)=>state.isOnboardingInProgress);\n    const currentStep = useAppStore((state)=>state.currentOnboardingStep);\n    const setCompleted = useAppStore((state)=>state.setOnboardingCompleted);\n    const setInProgress = useAppStore((state)=>state.setOnboardingInProgress);\n    const setStep = useAppStore((state)=>state.setOnboardingStep);\n    const complete = useAppStore((state)=>state.completeOnboarding);\n    const reset = useAppStore((state)=>state.resetOnboarding);\n    // Return a stable object by using useMemo if needed\n    return {\n        hasCompleted,\n        isInProgress,\n        currentStep,\n        setCompleted,\n        setInProgress,\n        setStep,\n        complete,\n        reset\n    };\n};\nconst useUserData = ()=>{\n    const preferences = useAppStore((state)=>state.userPreferences);\n    const bookRatings = useAppStore((state)=>state.bookRatings);\n    const authorRatings = useAppStore((state)=>state.authorRatings);\n    const setPreferences = useAppStore((state)=>state.setUserPreferences);\n    const setBookRatings = useAppStore((state)=>state.setBookRatings);\n    const setAuthorRatings = useAppStore((state)=>state.setAuthorRatings);\n    const getRecommendationData = useAppStore((state)=>state.getRecommendationData);\n    return {\n        preferences,\n        bookRatings,\n        authorRatings,\n        setPreferences,\n        setBookRatings,\n        setAuthorRatings,\n        getRecommendationData\n    };\n};\nconst useAppLoading = ()=>useAppStore((state)=>({\n            isLoading: state.isLoading,\n            setLoading: state.setLoading\n        }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./stores/useAppStore.ts\n"));

/***/ })

});